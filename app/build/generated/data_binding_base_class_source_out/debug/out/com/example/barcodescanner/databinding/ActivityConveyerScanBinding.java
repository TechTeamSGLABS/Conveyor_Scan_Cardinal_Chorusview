// Generated by view binder compiler. Do not edit!
package com.example.barcodescanner.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.SeekBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.camera.view.PreviewView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.barcodescanner.R;
import com.example.barcodescanner.view.OverlayView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityConveyerScanBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final LinearLayout bottomControlPanel;

  @NonNull
  public final TextView connectionStatusTextView;

  @NonNull
  public final View focusGuide;

  @NonNull
  public final OverlayView overlayView;

  @NonNull
  public final PreviewView previewView;

  @NonNull
  public final Button startStopButton;

  @NonNull
  public final TextView statusTextView;

  @NonNull
  public final TextView syncStatusTextView;

  @NonNull
  public final LinearLayout topStatusPanel;

  @NonNull
  public final LinearLayout zoomControlLayout;

  @NonNull
  public final SeekBar zoomSeekBar;

  private ActivityConveyerScanBinding(@NonNull RelativeLayout rootView,
      @NonNull LinearLayout bottomControlPanel, @NonNull TextView connectionStatusTextView,
      @NonNull View focusGuide, @NonNull OverlayView overlayView, @NonNull PreviewView previewView,
      @NonNull Button startStopButton, @NonNull TextView statusTextView,
      @NonNull TextView syncStatusTextView, @NonNull LinearLayout topStatusPanel,
      @NonNull LinearLayout zoomControlLayout, @NonNull SeekBar zoomSeekBar) {
    this.rootView = rootView;
    this.bottomControlPanel = bottomControlPanel;
    this.connectionStatusTextView = connectionStatusTextView;
    this.focusGuide = focusGuide;
    this.overlayView = overlayView;
    this.previewView = previewView;
    this.startStopButton = startStopButton;
    this.statusTextView = statusTextView;
    this.syncStatusTextView = syncStatusTextView;
    this.topStatusPanel = topStatusPanel;
    this.zoomControlLayout = zoomControlLayout;
    this.zoomSeekBar = zoomSeekBar;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityConveyerScanBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityConveyerScanBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_conveyer_scan, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityConveyerScanBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottomControlPanel;
      LinearLayout bottomControlPanel = ViewBindings.findChildViewById(rootView, id);
      if (bottomControlPanel == null) {
        break missingId;
      }

      id = R.id.connectionStatusTextView;
      TextView connectionStatusTextView = ViewBindings.findChildViewById(rootView, id);
      if (connectionStatusTextView == null) {
        break missingId;
      }

      id = R.id.focusGuide;
      View focusGuide = ViewBindings.findChildViewById(rootView, id);
      if (focusGuide == null) {
        break missingId;
      }

      id = R.id.overlayView;
      OverlayView overlayView = ViewBindings.findChildViewById(rootView, id);
      if (overlayView == null) {
        break missingId;
      }

      id = R.id.previewView;
      PreviewView previewView = ViewBindings.findChildViewById(rootView, id);
      if (previewView == null) {
        break missingId;
      }

      id = R.id.startStopButton;
      Button startStopButton = ViewBindings.findChildViewById(rootView, id);
      if (startStopButton == null) {
        break missingId;
      }

      id = R.id.statusTextView;
      TextView statusTextView = ViewBindings.findChildViewById(rootView, id);
      if (statusTextView == null) {
        break missingId;
      }

      id = R.id.syncStatusTextView;
      TextView syncStatusTextView = ViewBindings.findChildViewById(rootView, id);
      if (syncStatusTextView == null) {
        break missingId;
      }

      id = R.id.topStatusPanel;
      LinearLayout topStatusPanel = ViewBindings.findChildViewById(rootView, id);
      if (topStatusPanel == null) {
        break missingId;
      }

      id = R.id.zoomControlLayout;
      LinearLayout zoomControlLayout = ViewBindings.findChildViewById(rootView, id);
      if (zoomControlLayout == null) {
        break missingId;
      }

      id = R.id.zoomSeekBar;
      SeekBar zoomSeekBar = ViewBindings.findChildViewById(rootView, id);
      if (zoomSeekBar == null) {
        break missingId;
      }

      return new ActivityConveyerScanBinding((RelativeLayout) rootView, bottomControlPanel,
          connectionStatusTextView, focusGuide, overlayView, previewView, startStopButton,
          statusTextView, syncStatusTextView, topStatusPanel, zoomControlLayout, zoomSeekBar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
